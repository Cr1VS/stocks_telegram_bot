import asyncio
import logging
import nest_asyncio
from telegram.error import TelegramError
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters


from bot.config import BOT_TOKEN
from bot.handlers import start, handle_message, handle_date_input
from bot.admin_commands import (
    stats_command,
    last_users_command,
    log_command,
    version_command,
)


# –†–∞–∑—Ä–µ—à–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ event loop (–∞–∫—Ç—É–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä Jupyter)
nest_asyncio.apply()


# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ ===
logging.basicConfig(
    filename="logs/error.log",
    level=logging.ERROR,
    format="%(asctime)s | %(levelname)s | %(message)s",
    encoding="utf-8"
)


# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ===
async def main():
    try:
        # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram-–±–æ—Ç–∞
        app = ApplicationBuilder().token(BOT_TOKEN).build()

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        app.add_handler(CommandHandler("start", start))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∫–æ–º–∞–Ω–¥)
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))


        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats ‚Äî –≤—ã–≤–æ–¥–∏—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –±–æ—Ç—É (–≤—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö)
        app.add_handler(CommandHandler("stats", stats_command))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /last_users ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞–ª–∏ —Å –±–æ—Ç–æ–º
        app.add_handler(CommandHandler("last_users", last_users_command))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /log ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥-—Ñ–∞–π–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (user_activity.log) –ø—Ä—è–º–æ –≤ Telegram
        app.add_handler(CommandHandler("log", log_command))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /version ‚Äî –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞
        app.add_handler(CommandHandler("version", version_command))
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –¥–∞—Ç—ã ‚Äî –µ—Å–ª–∏ —ç—Ç–æ –î–î.–ú–ú —Ñ–æ—Ä–º–∞—Ç
        app.add_handler(MessageHandler(filters.Regex(r"^\d{2}\.\d{2}$"), handle_date_input))

        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ—Ç /start –∏ –≤—ã–±–æ—Ä –∫–Ω–æ–ø–∫–∏")

        # –ó–∞–ø—É—Å–∫ polling
        await app.run_polling()

    except TelegramError as e:
        logging.error(f"–û—à–∏–±–∫–∞ Telegram API: {e}", exc_info=True)
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {e}")

    except Exception as e:
        logging.error("–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞", exc_info=True)
        print(f"‚ö†Ô∏è   –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    try:
        loop = asyncio.get_event_loop()
        loop.run_until_complete(main())
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
